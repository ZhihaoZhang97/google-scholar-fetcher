name: Update Google Scholar Records

on:
  schedule:
    - cron: "0 0 1 * *"  # Runs at midnight on the 1st of every month
  workflow_dispatch:     # Allows manual triggering

permissions:
  contents: write
  
jobs:
  update-scholar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Debug: Check what variables are available (values will be masked in logs)
      - name: Debug variables
        run: |
          echo "GOOGLE_SCHOLAR_ID is set: ${{ vars.GOOGLE_SCHOLAR_ID != '' }}"
          echo "RECORD_FILE is set: ${{ vars.RECORD_FILE != '' }}"
      
      # Ensure target directory exists
      - name: Create directory for record file if needed
        run: |
          mkdir -p $(dirname "${{ vars.RECORD_FILE }}")
      
      # Use the local version of the action rather than the external one
      - name: Fetch Google Scholar Records
        id: scholar-fetch
        run: |
          node index.js
        env:
          INPUT_GOOGLE-SCHOLAR-ID: ${{ vars.GOOGLE_SCHOLAR_ID }}
          INPUT_RECORD-FILE: ${{ vars.RECORD_FILE }}
      
      - name: Track record file changes
        run: git add ${{ vars.RECORD_FILE }}

      - name: Check if file changed
        id: changed
        continue-on-error: true
        run: git diff --exit-code ${{ vars.RECORD_FILE }}

      - name: Check if staged file changed
        id: cached
        continue-on-error: true
        run: git diff --exit-code --cached ${{ vars.RECORD_FILE }}

      - name: Commit and push if changed
        if: ${{ steps.changed.outcome == 'failure' || steps.cached.outcome == 'failure' }}
        run: |
          git config --global user.name '${{ vars.GIT_USERNAME || 'GitHub Action' }}'
          git config --global user.email '${{ vars.GIT_EMAIL || 'action@github.com' }}'
          git commit -am "Update Google Scholar records"
          git push 